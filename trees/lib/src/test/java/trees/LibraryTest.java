/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package trees;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
  @Test
  void testInEmptyTree(){
  BinaryTree emptyTree=new BinaryTree();
  assertEquals(null,emptyTree.root);
  }
  @Test
  void testTreeWithOneRootNode(){
    BinarySearchTree singleNode=new BinarySearchTree();
    singleNode.insert(5);
    ArrayList expectedVlue=new ArrayList();
    expectedVlue.add(5);
    assertEquals(expectedVlue,singleNode.inOrder(singleNode.root));
  }
  @Test
  void testTreeLeftAndRightChild(){
    BinarySearchTree singleNode=new BinarySearchTree();
    singleNode.insert(5);
    singleNode.insert(2);
    singleNode.insert(7);
    ArrayList expectedVlue=new ArrayList();
    expectedVlue.add(2);
    expectedVlue.add(5);
    expectedVlue.add(7);
    assertEquals(expectedVlue,singleNode.inOrder(singleNode.root));
  }
  @Test
  void testTreePreOrder(){
    BinarySearchTree singleNode=new BinarySearchTree();
    singleNode.insert(5);
    singleNode.insert(2);
    singleNode.insert(7);
    ArrayList expectedVlue=new ArrayList();
    expectedVlue.add(5);
    expectedVlue.add(2);
    expectedVlue.add(7);
    assertEquals(expectedVlue,singleNode.preOrder(singleNode.root));
  }
  @Test
  void testTreeInorder(){
    BinarySearchTree singleNode=new BinarySearchTree();
    singleNode.insert(5);
    singleNode.insert(2);
    singleNode.insert(7);
    ArrayList expectedVlue=new ArrayList();
    expectedVlue.add(2);
    expectedVlue.add(5);
    expectedVlue.add(7);
    assertEquals(expectedVlue,singleNode.inOrder(singleNode.root));
  }
  @Test
  void testTreePostOrder(){
    BinarySearchTree singleNode=new BinarySearchTree();
    singleNode.insert(5);
    singleNode.insert(2);
    singleNode.insert(7);
    ArrayList expectedVlue=new ArrayList();
    expectedVlue.add(2);
    expectedVlue.add(7);
    expectedVlue.add(5);
    assertEquals(expectedVlue,singleNode.postOrder(singleNode.root));
  }
}
